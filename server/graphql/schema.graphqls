"The `UploadFile, // b.txt` scalar type represents a multipart file upload."
scalar Time

directive @auth on FIELD_DEFINITION

enum Role {
    ADMIN
    USER
}


type FieldError {
  message: String!
  field: String!
}

# @regionStart Responses 
interface IFormResponse {
  ok: Boolean!
  errors: [FieldError]
}

type FormResponse {
  ok: Boolean!
  errors: [FieldError]
}

type AuthResponse implements IFormResponse {
  ok: Boolean!
  errors: [FieldError]
  authToken: AuthToken
  user: User
}

type PostsResponse {
  hasMore: Boolean!
  posts: [Post!]!
}

# @regionEnd Responses 

# @regionStart Types 

type AuthToken {
  token: String!
  expiredAt: Time!
}

type User {
  id: String!
  username: String!
  email: String!
  phoneNumber: String!
  verified: Boolean!
  # meetups: [Meetup!]!
  createdAt: Time!
  updatedAt: Time!
}


type Post {
  id: String!
  title: String!
  description: String
  htmlContent: String
  files: [PostFile]
  tags: [Tag!]!
  creator: User!
  userId: String!

  # meetups: [Meetup!]!
  createdAt: Time!
  updatedAt: Time!
}

type Tag {
  id: String!
  name: String!
  code: String!
  catalogId: String!
  catalog: Catalog
}


type Catalog {
  id: String!
  name: String!
  code: String!
}

type PostFile {
  id: String!
  postId: String!
  url: String!
  contentType: String!
  fileSize: Int!
  fileName: String!
}

"The `Upload` scalar type represents a multipart file upload."
scalar Upload

"The `File` type, represents the response of uploading a file."
type File {
    id: Int!
    name: String!
    content: String!
    contentType: String!
}


# @regionEnd Types 

# @regionStart Inputs 

input RegisterInput {
  username: String!
  email: String!
  password: String!
  confirmPassword: String!
  firstName: String!
  lastName: String!
  phoneNumber: String!
}

input LoginInput {
  email: String!
  password: String!
}


input GoogleSignUpInput {
  token: String!
  username: String!
  phoneNumber: String!
}

input GoogleLoginInput {
  token: String!
}


input SendOtpInput {
  to: String!
}

input VerifyOtpInput {
  to: String!
  code: String!
}

input PostsInput {
  cursor: String
  limit: Int
  searchQuery: String
  tagIds: [String!]
}


input PostInput {
  id: String!
}

input DeletePostInput {
  id: String!
}


"The `UploadFile` type, represents the request for uploading a file with certain payload."
input UploadFile {
    id: Int!
    file: Upload!
}

# @regionEnd Inputs 



type Query {
  users: [User!]! 
  posts(input:PostsInput!): PostsResponse! @auth
  post(input:PostInput!): Post @auth
  tags: [Tag!]! @auth
  me: User @auth
  hello: String! 
}

type Mutation {
  register(input: RegisterInput!): AuthResponse!
  login(input: LoginInput!): AuthResponse!
  googleLogin(input:GoogleLoginInput!): AuthResponse!
  googleSignUp(input:GoogleSignUpInput!): AuthResponse!
  logout: Boolean! @auth
  refreshToken: AuthResponse! 
  sendOtp(input: SendOtpInput!): FormResponse!
  verifyOtp(input: VerifyOtpInput!): AuthResponse!
  
  deletePost(input:DeletePostInput!): FormResponse! @auth
  # createMeetup(input: NewMeetup!): Meetup!
  # updateMeetup(id: ID!, input: UpdateMeetup!): Meetup!
  # deleteMeetup(id: ID!): Boolean!
}




